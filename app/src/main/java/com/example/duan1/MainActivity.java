//package com.example.duan1;
//
//import android.os.Bundle;
//import android.os.Handler;
//import android.os.Looper;
//import android.widget.ImageButton;
//
//import androidx.appcompat.app.AppCompatActivity;
//import androidx.recyclerview.widget.LinearLayoutManager;
//import androidx.recyclerview.widget.RecyclerView;
//import androidx.viewpager2.widget.ViewPager2;
//
//import com.example.duan1.model.Product;
//import com.example.duan1.model.ProductAdapter;
//
//import java.util.ArrayList;
//import java.util.Arrays;
//import java.util.List;
//
//public class MainActivity extends AppCompatActivity {
//
//    private ViewPager2 bannerViewPager;
//    private Handler handler = new Handler(Looper.getMainLooper());
//    private Runnable runnable;
//    private int currentPage = 0;
//    private List<Integer> bannerList;
//
//    private RecyclerView rvFoods;
//    private ProductAdapter adapter;
//    private List<Product> allProducts = new ArrayList<>();
//
//    // C√°c n√∫t danh m·ª•c
//    private ImageButton btnBanhMi, btnCom, btnPho, btnTraSua, btnCafe;@Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_main);
//
//        // Banner setup
//        bannerViewPager = findViewById(R.id.banner);
//        bannerList = Arrays.asList(
//                R.drawable.comsuon,
//                R.drawable.banhmy,
//                R.drawable.ic_launcher_background
//        );
//        BannerAdapter bannerAdapter = new BannerAdapter(this, bannerList);
//        bannerViewPager.setAdapter(bannerAdapter);
//        autoSlideBanner();
//
//        // RecyclerView setup
//        rvFoods = findViewById(R.id.rvFoods);
//        rvFoods.setLayoutManager(new LinearLayoutManager(this));
//        adapter = new ProductAdapter(this, new ArrayList<>()); // ‚úÖ Th√™m context
//        rvFoods.setAdapter(adapter);
//
//        // √Ånh x·∫° ImageButton
//        btnBanhMi = findViewById(R.id.btnBanhMi);
//        btnCom = findViewById(R.id.btnCom);
//        btnPho = findViewById(R.id.btnPho);
//        btnTraSua = findViewById(R.id.btnTraSua);
//        btnCafe = findViewById(R.id.btnCafe);
//
//        // ‚úÖ G·ªçi h√†m Data() thay v√¨ loadSampleData()
//        Data();
//
//        // S·ª± ki·ªán click danh m·ª•c
//        btnBanhMi.setOnClickListener(v -> filterByCategory("B√°nh m√¨"));
//        btnCom.setOnClickListener(v -> filterByCategory("C∆°m"));
//        btnPho.setOnClickListener(v -> filterByCategory("Ph·ªü"));
//        btnTraSua.setOnClickListener(v -> filterByCategory("Tr√† s·ªØa"));
//        btnCafe.setOnClickListener(v -> filterByCategory("C√† ph√™"));
//
//        // Hi·ªÉn th·ªã t·∫•t c·∫£ m√≥n
//        adapter.setData(allProducts);
//    }
//
//    private void autoSlideBanner() {
//        runnable = () -> {
//            if (currentPage == bannerList.size()) currentPage = 0;
//            bannerViewPager.setCurrentItem(currentPage++, true);
//            handler.postDelayed(runnable, 5000);
//        };
//        handler.postDelayed(runnable, 5000);
//    }
//
//
//    private void Data() {allProducts.add(new Product("B√°nh m√¨ b√≤ n∆∞·ªõng ph√¥ mai", "B√°nh m√¨", R.drawable.banhmy1, 35000));
//        allProducts.add(new Product("B√°nh m√¨ tr·ª©ng x√∫c x√≠ch", "B√°nh m√¨", R.drawable.banhmy2, 30000));
//        allProducts.add(new Product("B√°nh m√¨ pate ch·∫£ l·ª•a", "B√°nh m√¨", R.drawable.banhmy3, 32000));
//        allProducts.add(new Product("B√°nh m√¨ ƒë·∫∑c s·∫£n H·ªôi An", "B√°nh m√¨", R.drawable.banhmy, 40000));
//        allProducts.add(new Product("B√°nh m√¨ th·ªãt quay gi√≤n b√¨", "B√°nh m√¨", R.drawable.banhmy, 38000));
//
//        allProducts.add(new Product("C∆°m g√† s·ªët cay H√†n Qu·ªëc", "C∆°m", R.drawable.com, 45000));
//        allProducts.add(new Product("C∆°m g√† h·∫•p h√†nh", "C∆°m", R.drawable.com1, 42000));
//        allProducts.add(new Product("C∆°m g√† x√© s·ª£i l√° chanh", "C∆°m", R.drawable.com2, 39000));
//        allProducts.add(new Product("C∆°m g√† r√¥ ti m·∫≠t ong", "C∆°m", R.drawable.com3, 46000));
//
//        allProducts.add(new Product("Ph·ªü b√≤ t√°i n·∫°m", "Ph·ªü", R.drawable.pho, 50000));
//        allProducts.add(new Product("Ph·ªü b√≤ vi√™n sa t·∫ø", "Ph·ªü", R.drawable.pho1, 48000));
//        allProducts.add(new Product("Ph·ªü g·∫ßu g√¢n n∆∞·ªõc trong", "Ph·ªü", R.drawable.pho2, 55000));
//        allProducts.add(new Product("Ph·ªü th·∫≠p c·∫©m ƒë·∫∑c bi·ªát", "Ph·ªü", R.drawable.pho3, 60000));
//
//        allProducts.add(new Product("Tr√† s·ªØa v·ªã truy·ªÅn th·ªëng", "Tr√† s·ªØa", R.drawable.trasua, 35000));
//        allProducts.add(new Product("Tr√† s·ªØa tr√¢n ch√¢u ƒë∆∞·ªùng ƒëen", "Tr√† s·ªØa", R.drawable.trasua1, 39000));
//        allProducts.add(new Product("Tr√† s·ªØa th√°i matcha", "Tr√† s·ªØa", R.drawable.trasua2, 37000));
//        allProducts.add(new Product("Tr√† s·ªØa Oolong kem s·ªØa", "Tr√† s·ªØa", R.drawable.trasua3, 42000));
//
//        allProducts.add(new Product("C√† ph√™ s·ªØa v·ªã truy·ªÅn th·ªëng", "C√† ph√™", R.drawable.cafe, 30000));
//        allProducts.add(new Product("C√† ph√™ ƒëen ƒë√° nguy√™n ch·∫•t", "C√† ph√™", R.drawable.cafe1, 28000));
//        allProducts.add(new Product("B·∫°c x·ªâu ƒë√° ki·ªÉu S√†i G√≤n", "C√† ph√™", R.drawable.cafe2, 32000));
//        allProducts.add(new Product("C√† ph√™ tr·ª©ng H√† N·ªôi", "C√† ph√™", R.drawable.cafe3, 35000));
//
//    }
//
//    private void filterByCategory(String category) {
//        List<Product> filtered = new ArrayList<>();
//        for (Product p : allProducts) {
//            if (p.getCategory().equals(category)) {
//                filtered.add(p);
//            }
//        }
//        adapter.setData(filtered);
//    }
//
//
//    @Override
//    protected void onPause() {
//        super.onPause();
//        handler.removeCallbacks(runnable);
//    }
//
//    @Override
//    protected void onResume() {
//        super.onResume();
//        handler.postDelayed(runnable, 5000);
//    }
//}

package com.example.duan1;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.widget.ImageButton;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager2.widget.ViewPager2;

import com.example.duan1.Product;
import com.example.duan1.ProductAdapter;
import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    private ViewPager2 bannerViewPager;
    private Handler handler = new Handler(Looper.getMainLooper());
    private Runnable runnable;
    private int currentPage = 0;
    private List<Integer> bannerList;

    private RecyclerView rvFoods;
    private ProductAdapter adapter;
    private List<Product> allProducts = new ArrayList<>();

    // C√°c n√∫t danh m·ª•c
    private ImageButton btnBanhMi, btnCom, btnPho, btnTraSua, btnCafe;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Banner setup
        bannerViewPager = findViewById(R.id.banner);
        bannerList = Arrays.asList(
                R.drawable.cafe1,
                R.drawable.trasua1,
                R.drawable.banhmy3,
                R.drawable.pho1
        );
        BannerAdapter bannerAdapter = new BannerAdapter(this, bannerList);
        bannerViewPager.setAdapter(bannerAdapter);
        autoSlideBanner();

        // RecyclerView setup
        rvFoods = findViewById(R.id.rvFoods);
        rvFoods.setLayoutManager(new LinearLayoutManager(this));
        adapter = new ProductAdapter(this, new ArrayList<>(), false);
        rvFoods.setAdapter(adapter);

        // √Ånh x·∫° ImageButton
        btnBanhMi = findViewById(R.id.btnBanhMi);
        btnCom = findViewById(R.id.btnCom);
        btnPho = findViewById(R.id.btnPho);
        btnTraSua = findViewById(R.id.btnTraSua);
        btnCafe = findViewById(R.id.btnCafe);

        // Load d·ªØ li·ªáu
        Data();

        // G√°n to√†n b·ªô s·∫£n ph·∫©m cho Adapter
        adapter.setData(allProducts);

        // B·∫Øt s·ª± ki·ªán l·ªçc theo danh m·ª•c
        btnBanhMi.setOnClickListener(v -> filterByCategory("B√°nh m√¨"));
        btnCom.setOnClickListener(v -> filterByCategory("C∆°m"));
        btnPho.setOnClickListener(v -> filterByCategory("Ph·ªü"));
        btnTraSua.setOnClickListener(v -> filterByCategory("Tr√† s·ªØa"));
        btnCafe.setOnClickListener(v -> filterByCategory("C√† ph√™"));

        // üëâ Bottom Navigation x·ª≠ l√Ω chuy·ªÉn m√†n b·∫±ng if-else
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setOnItemSelectedListener(item -> {
            int itemId = item.getItemId();

            if (itemId == R.id.nav_home) {
                // ƒê√£ ·ªü Home
                return true;
            } else if (itemId == R.id.nav_favorite) {
                startActivity(new Intent(MainActivity.this, FavoriteActivity.class));
                return true;
            } else if (itemId == R.id.nav_notification) {
                startActivity(new Intent(MainActivity.this, NotificationActivity.class));
                return true;
            } else if (itemId == R.id.donhang) {
                startActivity(new Intent(MainActivity.this, CartActivity.class));
                return true;
            } else if (itemId == R.id.nav_account) {
                startActivity(new Intent(MainActivity.this, AccountActivity.class));
                return true;
            }

            return false;
        });
    }

    private void autoSlideBanner() {
        runnable = () -> {
            if (currentPage == bannerList.size()) currentPage = 0;
            bannerViewPager.setCurrentItem(currentPage++, true);
            handler.postDelayed(runnable, 5000);
        };
        handler.postDelayed(runnable, 5000);
    }

    private void Data() {
        allProducts.add(new Product("B√°nh m√¨ b√≤ n∆∞·ªõng ph√¥ mai", "B√°nh m√¨", R.drawable.banhmy1, 35000));
        allProducts.add(new Product("B√°nh m√¨ tr·ª©ng x√∫c x√≠ch", "B√°nh m√¨", R.drawable.banhmy2, 30000));
        allProducts.add(new Product("B√°nh m√¨ pate ch·∫£ l·ª•a", "B√°nh m√¨", R.drawable.banhmy3, 32000));
        allProducts.add(new Product("B√°nh m√¨ ƒë·∫∑c s·∫£n H·ªôi An", "B√°nh m√¨", R.drawable.banhmy, 40000));
        allProducts.add(new Product("B√°nh m√¨ th·ªãt quay gi√≤n b√¨", "B√°nh m√¨", R.drawable.banhmy, 38000));

        allProducts.add(new Product("C∆°m g√† s·ªët cay H√†n Qu·ªëc", "C∆°m", R.drawable.com, 45000));
        allProducts.add(new Product("C∆°m g√† h·∫•p h√†nh", "C∆°m", R.drawable.com1, 42000));
        allProducts.add(new Product("C∆°m g√† x√© s·ª£i l√° chanh", "C∆°m", R.drawable.com2, 39000));
        allProducts.add(new Product("C∆°m g√† r√¥ ti m·∫≠t ong", "C∆°m", R.drawable.com3, 46000));

        allProducts.add(new Product("Ph·ªü b√≤ t√°i n·∫°m", "Ph·ªü", R.drawable.pho, 50000));
        allProducts.add(new Product("Ph·ªü b√≤ vi√™n sa t·∫ø", "Ph·ªü", R.drawable.pho1, 48000));
        allProducts.add(new Product("Ph·ªü g·∫ßu g√¢n n∆∞·ªõc trong", "Ph·ªü", R.drawable.pho2, 55000));
        allProducts.add(new Product("Ph·ªü th·∫≠p c·∫©m ƒë·∫∑c bi·ªát", "Ph·ªü", R.drawable.pho3, 60000));

        allProducts.add(new Product("Tr√† s·ªØa v·ªã truy·ªÅn th·ªëng", "Tr√† s·ªØa", R.drawable.trasua, 35000));
        allProducts.add(new Product("Tr√† s·ªØa tr√¢n ch√¢u ƒë∆∞·ªùng ƒëen", "Tr√† s·ªØa", R.drawable.trasua1, 39000));
        allProducts.add(new Product("Tr√† s·ªØa th√°i matcha", "Tr√† s·ªØa", R.drawable.trasua2, 37000));
        allProducts.add(new Product("Tr√† s·ªØa Oolong kem s·ªØa", "Tr√† s·ªØa", R.drawable.trasua3, 42000));

        allProducts.add(new Product("C√† ph√™ s·ªØa v·ªã truy·ªÅn th·ªëng", "C√† ph√™", R.drawable.cafe, 30000));
        allProducts.add(new Product("C√† ph√™ ƒëen ƒë√° nguy√™n ch·∫•t", "C√† ph√™", R.drawable.cafe1, 28000));
        allProducts.add(new Product("B·∫°c x·ªâu ƒë√° ki·ªÉu S√†i G√≤n", "C√† ph√™", R.drawable.cafe2, 32000));
        allProducts.add(new Product("C√† ph√™ tr·ª©ng H√† N·ªôi", "C√† ph√™", R.drawable.cafe3, 35000));
    }

    private void filterByCategory(String category) {
        List<Product> filtered = new ArrayList<>();
        for (Product p : allProducts) {
            if (p.getCategory().equals(category)) {
                filtered.add(p);
            }
        }
        adapter.setData(filtered);
    }

    @Override
    protected void onPause() {
        super.onPause();
        handler.removeCallbacks(runnable);
    }

    @Override
    protected void onResume() {
        super.onResume();
        handler.postDelayed(runnable, 5000);
    }
}
